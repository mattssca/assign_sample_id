install.packages(tidyverse)
install.packages('tidyverse')
install.packages("shiny")
shiny::runApp("path/to/your/app.R")
library(shiny)
install.packages(promises)
install.packages('promises')
shiny::runApp("path/to/your/app.R")
shiny::runApp("../Desktop/shiny/app.r")
install.packages("promises")
load("C:/Users/matts/Desktop/LundTaxonomy2023Classifier/data/sjodahl_2017.rda")
devtools::load_all(path = "../Desktop/LundTaxonomy2023Classifier/")
predicted = lundtax_predict_sub(this_data = sjodahl_2017, adjust = TRUE, impute = TRUE, include_data = TRUE)
View(predicted)
head(predicted$data)
head(predicted$data)[1:5]
head(predicted$predictions_5classes)[1:5]
head(predicted$predictions_7classes)[1:5]
head(predicted$subtype_scores)[1:5]
head(predicted$subtype_scores)[5]
head(predicted$subtype_scores)
head(predicted$scores)
head(predicted$scores)[1:5]
head(predicted$data)[1:5]
head(predicted$predictions_5classes)[1:5]
head(predicted$predictions_7classes)[1:5]
head(predicted$subtype_scores)
head(predicted$scores)[1:5]
setwd("C:/Users/matts/Desktop/assign_sample_id")
#load library
library(rsconnect)
#set up path
rsconnect::setAccountInfo(name = 'mattsada',
token = '5E4DA24AF146CA871C2F9E7657C54EEB',
secret = 'CMKrmQedHY5/ww0kRRYBQF8Npzr/vcclSTeQaphz')
#deploy
rsconnect::deployApp('shiny-app/')
devtools::document()
devtools::build()
devtools::install()
#deploy
rsconnect::deployApp('shiny-app/')
#deploy
rsconnect::deployApp('shiny-app/')
install.packages('shinyjs')
#deploy
rsconnect::deployApp('shiny-app/')
devtools::install_github("mattssca/assign_sample_id")
#set up path
rsconnect::setAccountInfo(name = 'mattsada',
token = '5E4DA24AF146CA871C2F9E7657C54EEB',
secret = 'CMKrmQedHY5/ww0kRRYBQF8Npzr/vcclSTeQaphz')
#deploy
rsconnect::deployApp('shiny-app/')
shiny::runApp()
shiny::runApp("shiny-app")
shiny::runApp("shiny-app")
shiny::runApp("shiny-app")
shiny::runApp("shiny-app")
shiny::runApp("shiny-app")
shiny::runApp("shiny-app")
shiny::runApp("shiny-app")
devtools::install_all()
devtools::install()
shiny::runApp("shiny-app")
library(AssignSampleIDs)
assigned = AssignSampleIDs::assign_sample_id(this_data = test_data,
start_id = 1,
verbose = TRUE,
return_full = TRUE)
devtools::load_all()
