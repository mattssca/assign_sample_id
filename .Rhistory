mutate(sample_id = paste0("USQ_", sprintf("%05d", as.integer(factor(personal_id)) + start_id - 1)))
#add a new column annotating duplicates
this_data <- this_data %>%
group_by(personal_id, date_of_sample) %>%
mutate(sample_rep = row_number()) %>%
ungroup()
#add a new column tumor_n
this_data <- this_data %>%
group_by(personal_id) %>%
arrange(date_of_sample) %>%
mutate(tumor_n = LETTERS[row_number()]) %>%
ungroup()
#update tumor_n to ensure the same value for the same personal_id and date_of_sample
this_data <- this_data %>%
group_by(personal_id, date_of_sample) %>%
mutate(tumor_n = first(tumor_n)) %>%
ungroup()
#update tumor_n to assign unique letters for distinct tumors and keep duplicates consistent
this_data <- this_data %>%
group_by(personal_id) %>%
arrange(date_of_sample) %>%
mutate(tumor_n = LETTERS[match(date_of_sample, unique(date_of_sample))]) %>%
ungroup()
#subtract 1 from all values in the sample_rep column
this_data <- this_data %>%
mutate(sample_rep = sample_rep - 1)
#replace all "A" in tumor_n with NA
this_data <- this_data %>%
mutate(tumor_n = ifelse(tumor_n == "A", NA, tumor_n)) %>%
mutate(sample_rep  = ifelse(sample_rep  == 0, NA, sample_rep ))
#create the formatted_sample_id column
this_data <- this_data %>%
mutate(
formatted_sample_id = paste(
sample_id,
ifelse(is.na(sample_rep), "", sample_rep),
ifelse(is.na(tumor_n), "", tumor_n),
sep = "_"
) %>%
gsub("_$", "", .)
)
#clean up the formatted_sample_id column
this_data <- this_data %>%
mutate(
formatted_sample_id = gsub("_$", "", formatted_sample_id),
formatted_sample_id = gsub("_+", "_", formatted_sample_id)
)
if(verbose){
num_unique_samples <- test_out %>%
summarise(num_unique = n_distinct(sample_id)) %>%
pull(num_unique)
#num_multiple_tumors <- this_data %>%
#  group_by(!!sym(personal_id_col)) %>%
#  summarise(num_dates = n_distinct(!!sym(date_col))) %>%
#  filter(num_dates > 1) %>%
#  nrow()
#num_sample_replicates <- this_data %>%
#  group_by(!!sym(personal_id_col), !!sym(date_col)) %>%
#  summarise(num_replicates = n()) %>%
#  filter(num_replicates > 1) %>%
#  nrow()
cat("Number of unique samples:", num_unique_samples, "\n")
#cat("Number of patients with multiple tumors:", num_multiple_tumors, "\n")
#cat("Number of sample replicates:", num_sample_replicates, "\n")
}
#format the return
#this_data = this_data %>%
#  select(lab_id, personal_id, date_of_sample, formatted_sample_id) %>%
#  rename(sample_id = formatted_sample_id) %>%
#  arrange(sample_id)
return(this_data)
}
#example
test_out = assign_sample_id(this_data = new_test, start_id = 2)
#example
test_out = assign_sample_id(this_data = new_test, start_id = 1)
assign_sample_id = function(this_data = NULL,
start_id = NULL,
lab_id_col = "lab_id",
personal_id_col = "personal_id",
date_col = "date_of_sample",
verbose = TRUE){
#check if the specified columns exist in the incoming data
required_cols <- c(lab_id_col, personal_id_col, date_col)
if(!all(required_cols %in% colnames(this_data))){
stop("One or more specified columns do not exist in the incoming data.")
}
#checks
if(is.null(start_id)){
stop("No starting sample_id provided, the funciton does not know the sequence of sample IDs to adhere to...")
}
#create sample_id for each unique personal_id
this_data <- this_data %>%
mutate(sample_id = paste0("USQ_", sprintf("%05d", as.integer(factor(personal_id)) + start_id - 1)))
#add a new column annotating duplicates
this_data <- this_data %>%
group_by(personal_id, date_of_sample) %>%
mutate(sample_rep = row_number()) %>%
ungroup()
#add a new column tumor_n
this_data <- this_data %>%
group_by(personal_id) %>%
arrange(date_of_sample) %>%
mutate(tumor_n = LETTERS[row_number()]) %>%
ungroup()
#update tumor_n to ensure the same value for the same personal_id and date_of_sample
this_data <- this_data %>%
group_by(personal_id, date_of_sample) %>%
mutate(tumor_n = first(tumor_n)) %>%
ungroup()
#update tumor_n to assign unique letters for distinct tumors and keep duplicates consistent
this_data <- this_data %>%
group_by(personal_id) %>%
arrange(date_of_sample) %>%
mutate(tumor_n = LETTERS[match(date_of_sample, unique(date_of_sample))]) %>%
ungroup()
#subtract 1 from all values in the sample_rep column
this_data <- this_data %>%
mutate(sample_rep = sample_rep - 1)
#replace all "A" in tumor_n with NA
this_data <- this_data %>%
mutate(tumor_n = ifelse(tumor_n == "A", NA, tumor_n)) %>%
mutate(sample_rep  = ifelse(sample_rep  == 0, NA, sample_rep ))
#create the formatted_sample_id column
this_data <- this_data %>%
mutate(
formatted_sample_id = paste(
sample_id,
ifelse(is.na(sample_rep), "", sample_rep),
ifelse(is.na(tumor_n), "", tumor_n),
sep = "_"
) %>%
gsub("_$", "", .)
)
#clean up the formatted_sample_id column
this_data <- this_data %>%
mutate(
formatted_sample_id = gsub("_$", "", formatted_sample_id),
formatted_sample_id = gsub("_+", "_", formatted_sample_id)
)
if(verbose){
num_unique_samples <- test_out %>%
summarise(num_unique = n_distinct(sample_id)) %>%
pull(num_unique)
num_non_na_sample_rep <- test_out %>%
filter(!is.na(sample_rep)) %>%
nrow()
cat("Number of unique samples:", num_unique_samples, "\n")
cat("Number of patients with multiple tumors:", num_non_na_sample_rep, "\n")
#cat("Number of sample replicates:", num_sample_replicates, "\n")
}
#format the return
#this_data = this_data %>%
#  select(lab_id, personal_id, date_of_sample, formatted_sample_id) %>%
#  rename(sample_id = formatted_sample_id) %>%
#  arrange(sample_id)
return(this_data)
}
#example
test_out = assign_sample_id(this_data = new_test, start_id = 1)
assign_sample_id = function(this_data = NULL,
start_id = NULL,
lab_id_col = "lab_id",
personal_id_col = "personal_id",
date_col = "date_of_sample",
verbose = TRUE){
#check if the specified columns exist in the incoming data
required_cols <- c(lab_id_col, personal_id_col, date_col)
if(!all(required_cols %in% colnames(this_data))){
stop("One or more specified columns do not exist in the incoming data.")
}
#checks
if(is.null(start_id)){
stop("No starting sample_id provided, the funciton does not know the sequence of sample IDs to adhere to...")
}
#create sample_id for each unique personal_id
this_data <- this_data %>%
mutate(sample_id = paste0("USQ_", sprintf("%05d", as.integer(factor(personal_id)) + start_id - 1)))
#add a new column annotating duplicates
this_data <- this_data %>%
group_by(personal_id, date_of_sample) %>%
mutate(sample_rep = row_number()) %>%
ungroup()
#add a new column tumor_n
this_data <- this_data %>%
group_by(personal_id) %>%
arrange(date_of_sample) %>%
mutate(tumor_n = LETTERS[row_number()]) %>%
ungroup()
#update tumor_n to ensure the same value for the same personal_id and date_of_sample
this_data <- this_data %>%
group_by(personal_id, date_of_sample) %>%
mutate(tumor_n = first(tumor_n)) %>%
ungroup()
#update tumor_n to assign unique letters for distinct tumors and keep duplicates consistent
this_data <- this_data %>%
group_by(personal_id) %>%
arrange(date_of_sample) %>%
mutate(tumor_n = LETTERS[match(date_of_sample, unique(date_of_sample))]) %>%
ungroup()
#subtract 1 from all values in the sample_rep column
this_data <- this_data %>%
mutate(sample_rep = sample_rep - 1)
#replace all "A" in tumor_n with NA
this_data <- this_data %>%
mutate(tumor_n = ifelse(tumor_n == "A", NA, tumor_n)) %>%
mutate(sample_rep  = ifelse(sample_rep  == 0, NA, sample_rep ))
#create the formatted_sample_id column
this_data <- this_data %>%
mutate(
formatted_sample_id = paste(
sample_id,
ifelse(is.na(sample_rep), "", sample_rep),
ifelse(is.na(tumor_n), "", tumor_n),
sep = "_"
) %>%
gsub("_$", "", .)
)
#clean up the formatted_sample_id column
this_data <- this_data %>%
mutate(
formatted_sample_id = gsub("_$", "", formatted_sample_id),
formatted_sample_id = gsub("_+", "_", formatted_sample_id)
)
if(verbose){
num_unique_samples <- test_out %>%
summarise(num_unique = n_distinct(sample_id)) %>%
pull(num_unique)
num_non_na_sample_rep <- test_out %>%
filter(!is.na(sample_rep)) %>%
nrow()
num_sample_tumors <- test_out %>%
filter(!is.na(tumor_n)) %>%
nrow()
cat("Number of unique samples:", num_unique_samples, "\n")
cat("Number of patients with replicates:", num_non_na_sample_rep, "\n")
cat("Number of sample replicates:", num_sample_tumors, "\n")
}
#format the return
#this_data = this_data %>%
#  select(lab_id, personal_id, date_of_sample, formatted_sample_id) %>%
#  rename(sample_id = formatted_sample_id) %>%
#  arrange(sample_id)
return(this_data)
}
#example
test_out = assign_sample_id(this_data = new_test, start_id = 1)
assign_sample_id = function(this_data = NULL,
start_id = NULL,
lab_id_col = "lab_id",
personal_id_col = "personal_id",
date_col = "date_of_sample",
verbose = TRUE){
#check if the specified columns exist in the incoming data
required_cols <- c(lab_id_col, personal_id_col, date_col)
if(!all(required_cols %in% colnames(this_data))){
stop("One or more specified columns do not exist in the incoming data.")
}
#checks
if(is.null(start_id)){
stop("No starting sample_id provided, the funciton does not know the sequence of sample IDs to adhere to...")
}
#create sample_id for each unique personal_id
this_data <- this_data %>%
mutate(sample_id = paste0("USQ_", sprintf("%05d", as.integer(factor(personal_id)) + start_id - 1)))
#add a new column annotating duplicates
this_data <- this_data %>%
group_by(personal_id, date_of_sample) %>%
mutate(sample_rep = row_number()) %>%
ungroup()
#add a new column tumor_n
this_data <- this_data %>%
group_by(personal_id) %>%
arrange(date_of_sample) %>%
mutate(tumor_n = LETTERS[row_number()]) %>%
ungroup()
#update tumor_n to ensure the same value for the same personal_id and date_of_sample
this_data <- this_data %>%
group_by(personal_id, date_of_sample) %>%
mutate(tumor_n = first(tumor_n)) %>%
ungroup()
#update tumor_n to assign unique letters for distinct tumors and keep duplicates consistent
this_data <- this_data %>%
group_by(personal_id) %>%
arrange(date_of_sample) %>%
mutate(tumor_n = LETTERS[match(date_of_sample, unique(date_of_sample))]) %>%
ungroup()
#subtract 1 from all values in the sample_rep column
this_data <- this_data %>%
mutate(sample_rep = sample_rep - 1)
#replace all "A" in tumor_n with NA
this_data <- this_data %>%
mutate(tumor_n = ifelse(tumor_n == "A", NA, tumor_n)) %>%
mutate(sample_rep  = ifelse(sample_rep  == 0, NA, sample_rep ))
#create the formatted_sample_id column
this_data <- this_data %>%
mutate(
formatted_sample_id = paste(
sample_id,
ifelse(is.na(sample_rep), "", sample_rep),
ifelse(is.na(tumor_n), "", tumor_n),
sep = "_"
) %>%
gsub("_$", "", .)
)
#clean up the formatted_sample_id column
this_data <- this_data %>%
mutate(
formatted_sample_id = gsub("_$", "", formatted_sample_id),
formatted_sample_id = gsub("_+", "_", formatted_sample_id)
)
if(verbose){
num_unique_samples <- test_out %>%
summarise(num_unique = n_distinct(sample_id)) %>%
pull(num_unique)
num_non_na_sample_rep <- test_out %>%
filter(!is.na(sample_rep)) %>%
nrow()
num_sample_tumors <- test_out %>%
filter(!is.na(tumor_n)) %>%
nrow()
cat("Number of unique samples:", num_unique_samples, "\n")
cat("Number of patients with replicates:", num_non_na_sample_rep, "\n")
cat("Number of samples with multiple tumors:", num_sample_tumors, "\n")
}
#format the return
#this_data = this_data %>%
#  select(lab_id, personal_id, date_of_sample, formatted_sample_id) %>%
#  rename(sample_id = formatted_sample_id) %>%
#  arrange(sample_id)
return(this_data)
}
#example
test_out = assign_sample_id(this_data = new_test, start_id = 1)
assign_sample_id = function(this_data = NULL,
start_id = NULL,
lab_id_col = "lab_id",
personal_id_col = "personal_id",
date_col = "date_of_sample",
verbose = TRUE){
#check if the specified columns exist in the incoming data
required_cols <- c(lab_id_col, personal_id_col, date_col)
if(!all(required_cols %in% colnames(this_data))){
stop("One or more specified columns do not exist in the incoming data.")
}
#checks
if(is.null(start_id)){
stop("No starting sample_id provided, the funciton does not know the sequence of sample IDs to adhere to...")
}
#create sample_id for each unique personal_id
this_data <- this_data %>%
mutate(sample_id = paste0("USQ_", sprintf("%05d", as.integer(factor(personal_id)) + start_id - 1)))
#add a new column annotating duplicates
this_data <- this_data %>%
group_by(personal_id, date_of_sample) %>%
mutate(sample_rep = row_number()) %>%
ungroup()
#add a new column tumor_n
this_data <- this_data %>%
group_by(personal_id) %>%
arrange(date_of_sample) %>%
mutate(tumor_n = LETTERS[row_number()]) %>%
ungroup()
#update tumor_n to ensure the same value for the same personal_id and date_of_sample
this_data <- this_data %>%
group_by(personal_id, date_of_sample) %>%
mutate(tumor_n = first(tumor_n)) %>%
ungroup()
#update tumor_n to assign unique letters for distinct tumors and keep duplicates consistent
this_data <- this_data %>%
group_by(personal_id) %>%
arrange(date_of_sample) %>%
mutate(tumor_n = LETTERS[match(date_of_sample, unique(date_of_sample))]) %>%
ungroup()
#subtract 1 from all values in the sample_rep column
this_data <- this_data %>%
mutate(sample_rep = sample_rep - 1)
#replace all "A" in tumor_n with NA
this_data <- this_data %>%
mutate(tumor_n = ifelse(tumor_n == "A", NA, tumor_n)) %>%
mutate(sample_rep  = ifelse(sample_rep  == 0, NA, sample_rep ))
#create the formatted_sample_id column
this_data <- this_data %>%
mutate(
formatted_sample_id = paste(
sample_id,
ifelse(is.na(sample_rep), "", sample_rep),
ifelse(is.na(tumor_n), "", tumor_n),
sep = "_"
) %>%
gsub("_$", "", .)
)
#clean up the formatted_sample_id column
this_data <- this_data %>%
mutate(
formatted_sample_id = gsub("_$", "", formatted_sample_id),
formatted_sample_id = gsub("_+", "_", formatted_sample_id)
)
if(verbose){
num_unique_samples <- test_out %>%
summarise(num_unique = n_distinct(sample_id)) %>%
pull(num_unique)
num_non_na_sample_rep <- test_out %>%
filter(!is.na(sample_rep)) %>%
nrow()
num_sample_tumors <- test_out %>%
summarise(tumor_unique = n_distinct(tumor_n)) %>%
pull(tumor_unique)
cat("Number of unique samples:", num_unique_samples, "\n")
cat("Number of patients with replicates:", num_non_na_sample_rep, "\n")
cat("Number of samples with multiple tumors:", num_sample_tumors, "\n")
}
#format the return
#this_data = this_data %>%
#  select(lab_id, personal_id, date_of_sample, formatted_sample_id) %>%
#  rename(sample_id = formatted_sample_id) %>%
#  arrange(sample_id)
return(this_data)
}
#example
test_out = assign_sample_id(this_data = new_test, start_id = 1)
assign_sample_id = function(this_data = NULL,
start_id = NULL,
lab_id_col = "lab_id",
personal_id_col = "personal_id",
date_col = "date_of_sample",
verbose = TRUE){
#check if the specified columns exist in the incoming data
required_cols <- c(lab_id_col, personal_id_col, date_col)
if(!all(required_cols %in% colnames(this_data))){
stop("One or more specified columns do not exist in the incoming data.")
}
#checks
if(is.null(start_id)){
stop("No starting sample_id provided, the funciton does not know the sequence of sample IDs to adhere to...")
}
#create sample_id for each unique personal_id
this_data <- this_data %>%
mutate(sample_id = paste0("USQ_", sprintf("%05d", as.integer(factor(personal_id)) + start_id - 1)))
#add a new column annotating duplicates
this_data <- this_data %>%
group_by(personal_id, date_of_sample) %>%
mutate(sample_rep = row_number()) %>%
ungroup()
#add a new column tumor_n
this_data <- this_data %>%
group_by(personal_id) %>%
arrange(date_of_sample) %>%
mutate(tumor_n = LETTERS[row_number()]) %>%
ungroup()
#update tumor_n to ensure the same value for the same personal_id and date_of_sample
this_data <- this_data %>%
group_by(personal_id, date_of_sample) %>%
mutate(tumor_n = first(tumor_n)) %>%
ungroup()
#update tumor_n to assign unique letters for distinct tumors and keep duplicates consistent
this_data <- this_data %>%
group_by(personal_id) %>%
arrange(date_of_sample) %>%
mutate(tumor_n = LETTERS[match(date_of_sample, unique(date_of_sample))]) %>%
ungroup()
#subtract 1 from all values in the sample_rep column
this_data <- this_data %>%
mutate(sample_rep = sample_rep - 1)
#replace all "A" in tumor_n with NA
this_data <- this_data %>%
mutate(tumor_n = ifelse(tumor_n == "A", NA, tumor_n)) %>%
mutate(sample_rep  = ifelse(sample_rep  == 0, NA, sample_rep ))
#create the formatted_sample_id column
this_data <- this_data %>%
mutate(
formatted_sample_id = paste(
sample_id,
ifelse(is.na(sample_rep), "", sample_rep),
ifelse(is.na(tumor_n), "", tumor_n),
sep = "_"
) %>%
gsub("_$", "", .)
)
#clean up the formatted_sample_id column
this_data <- this_data %>%
mutate(
formatted_sample_id = gsub("_$", "", formatted_sample_id),
formatted_sample_id = gsub("_+", "_", formatted_sample_id)
)
if(verbose){
num_unique_samples <- test_out %>%
summarise(num_unique = n_distinct(sample_id)) %>%
pull(num_unique)
num_non_na_sample_rep <- test_out %>%
filter(!is.na(sample_rep)) %>%
nrow()
num_sample_tumors <- test_out %>%
summarise(tumor_unique = n_distinct(tumor_n)) %>%
pull(tumor_unique)
cat("Number of unique samples:", num_unique_samples, "\n")
cat("Number of patients with replicates:", num_non_na_sample_rep, "\n")
cat("Number of samples with multiple tumors:", num_sample_tumors, "\n")
}
#format the return
this_data = this_data %>%
select(lab_id, personal_id, date_of_sample, formatted_sample_id) %>%
rename(sample_id = formatted_sample_id) %>%
arrange(sample_id)
return(this_data)
}
#example
test_out = assign_sample_id(this_data = new_test, start_id = 1)
#print
test_out
setwd("../assign_sample_id/")
devtools::document()
