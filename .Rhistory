install.packages(tidyverse)
install.packages('tidyverse')
install.packages("shiny")
shiny::runApp("path/to/your/app.R")
library(shiny)
install.packages(promises)
install.packages('promises')
shiny::runApp("path/to/your/app.R")
shiny::runApp("../Desktop/shiny/app.r")
install.packages("promises")
load("C:/Users/matts/Desktop/LundTaxonomy2023Classifier/data/sjodahl_2017.rda")
devtools::load_all(path = "../Desktop/LundTaxonomy2023Classifier/")
predicted = lundtax_predict_sub(this_data = sjodahl_2017, adjust = TRUE, impute = TRUE, include_data = TRUE)
View(predicted)
head(predicted$data)
head(predicted$data)[1:5]
head(predicted$predictions_5classes)[1:5]
head(predicted$predictions_7classes)[1:5]
head(predicted$subtype_scores)[1:5]
head(predicted$subtype_scores)[5]
head(predicted$subtype_scores)
head(predicted$scores)
head(predicted$scores)[1:5]
head(predicted$data)[1:5]
head(predicted$predictions_5classes)[1:5]
head(predicted$predictions_7classes)[1:5]
head(predicted$subtype_scores)
head(predicted$scores)[1:5]
devtools::load_all(path = "../Desktop/assign_sample_id/")
AssignSampleIDs::test_data
AssignSampleIDs::assign_sample_id(this_data = test_data, start_id = 1)
knitr::opts_chunk$set(collapse = TRUE, comment = "#>")
library(AssignSampleIDs)
AssignSampleIDs::test_data
head(test_data)
result <- assign_sample_id(
this_data = test_data,
start_id = 100,
lab_id_col = "lab_id",
personal_id_col = "personal_id",
date_col = "date_of_sample",
verbose = TRUE
)
head(result)
test_data = AssignSampleIDs::test_data
head(test_data)
result <- assign_sample_id(
this_data = test_data,
start_id = 100,
lab_id_col = "lab_id",
personal_id_col = "personal_id",
date_col = "date_of_sample",
verbose = TRUE
)
head(result)
devtools::install()
devtools::load_all(path = "../Desktop/assign_sample_id/")
devtools::document()
setwd("C:/Users/matts/Desktop/assign_sample_id")
devtools::document()
devtools::install()
devtools::document()
devtools::install()
devtools::document()
devtools::install()
library(AssignSampleIDs)
data(test_data)
head(test_data)
devtools::build_vignettes()
devtools::document()
